/*! esm-loader-manager v0.4.0 | (c) 2023 Comandeer | MIT license (see LICENSE) */
import{readdir as t,readFile as n,access as r}from"node:fs/promises";import{cwd as o,env as e}from"node:process";import{fileURLToPath as s,pathToFileURL as c}from"node:url";import{relative as a,isAbsolute as i,resolve as u}from"pathe";const l=[".js",".mjs"];const f=o(),m=await async function n(r){try{if((await t(r)).includes("package.json"))return r;const o=u(r,"..");return o===r?null:n(o)}catch{return null}}(f);m||console.warn("ESMLM: The project root was not detected. Falling back to the CWD.");const d=m||f,h="ESMLM_CONFIG"in e?e.ESMLM_CONFIG:await async function n(r,o){try{const e=await t(r);for(const t of l){const n=`.esmlmrc${t}`;if(e.includes(n)){return u(r,n)}}if(r===o)return null;return n(u(r,".."))}catch{return null}}(f,d),w=h?u(f,h):null;let p=[];try{await r(w);const t=c(w),{default:n}=await import(t);p=n.loaders}catch{console.warn("ESMLM: The file with loaders' definition was not found or cannot be accessed.")}async function y(t,n,r){const o=await r(t,n,r),{url:e}=o;if(g(d,o))return o;return p.some((({matcher:t})=>t(e,n)))?{url:e,type:"module"}:o}async function M(t,r,o){const e={...r,url:t};if(g(d,e))return o(t,r,o);const c=p.filter((({matcher:n})=>n(t,r)));if(0===c.length)return o(t,r,o);let a=await async function(t){const r=s(t);return n(r)}(t);for(const{loader:n}of c)a=await n(t,a);return{format:"module",shortCircuit:!0,source:a}}function g(t,n){const r=n.url;return function({url:t,format:n}){return n?"builtin"===n:t.startsWith("node:")}(n)||/[/\\]node_modules[/\\]/gi.test(r)||!function(t,n){const r=n.startsWith("file://")?s(n):n,o=a(t,r),e=o.length>0,c=!o.startsWith(".."),u=!i(o);return e&&c&&u}(t,r)}export{M as load,y as resolve};
//# sourceMappingURL=esm-loader-manager.mjs.map
